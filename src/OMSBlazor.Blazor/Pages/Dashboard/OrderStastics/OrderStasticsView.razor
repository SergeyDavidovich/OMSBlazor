@using OMSBlazor.Blazor.Components
@using OMSBlazor.Dto.Order.Stastics
@using ReactiveUI.Blazor
@inherits ReactiveComponentBase<OrderStasticsViewModel>

<StupeniCard Icon="@Icons.Material.Filled.Edit" Title="Orders" IsWithButton="false">
    <MudGrid Justify="Justify.SpaceAround">
        <MudItem xs="12" lg="3" md="3">
            <StupeniSummaryItem Title="Overall" Icon="@Icons.Material.Filled.Money" IconColor="@MudBlazor.Color.Secondary" Value="@OverallSalesValue"></StupeniSummaryItem>
        </MudItem>
        <MudItem xs="12" lg="2" md="2">
            <StupeniSummaryItem Title="Quantity" Icon="@Icons.Material.Filled.Numbers" IconColor="@MudBlazor.Color.Success" Value="@OrdersQuantityValue"></StupeniSummaryItem>
        </MudItem>
        <MudItem xs="12" lg="2" md="2">
            <StupeniSummaryItem Title="Max" Icon="@Icons.Material.Filled.DonutLarge" IconColor="@MudBlazor.Color.Error" Value="@MaxCheckValue"></StupeniSummaryItem>
        </MudItem>
        <MudItem xs="12" lg="2" md="2">
            <StupeniSummaryItem Title="Min" Icon="@Icons.Material.Filled.DonutSmall" IconColor="@MudBlazor.Color.Info" Value="@MinCheckValue"></StupeniSummaryItem>
        </MudItem>
        <MudItem xs="12" lg="3" md="3">
            <StupeniSummaryItem Title="Average" Icon="@Icons.Material.Filled.PriceCheck" IconColor="@MudBlazor.Color.Warning" Value="@AverageCheckValue"></StupeniSummaryItem>
        </MudItem>
        <MudItem xs="12" lg="6" md="6">
            <MudPaper Outlined="true" Height="400px">
                <ApexChart Title="Orders by countries (top 10)"
                           TItem="OrdersByCountryDto"
                           @ref="orderByCountriesChart"
                           Height="@("100%")"
                           Options="orderByCountriesOptions">
                    <ApexPointSeries TItem="OrdersByCountryDto"
                                     Items="@ViewModel!.OrdersByCountries"
                                     XValue="x=>x.CountryName"
                                     YValue="x=>x.OrdersCount"
                                     SeriesType="SeriesType.Pie" />
                </ApexChart>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" lg="6" md="6">
            <MudPaper Outlined="true" Height="400px">
                <ApexChart Title="Sales by categories"
                           TItem="SalesByCategoryDto"
                           Height="@("100%")"
                           @ref="salesByCategoryChart"
                           Options="salesByCategoryOptions">
                    <ApexPointSeries TItem="SalesByCategoryDto"
                                     Items="@ViewModel!.SalesByCategories"
                                     XValue="x=>x.CategoryName"
                                     YValue="x=>x.Sales"
                                     SeriesType="SeriesType.Pie" />
                </ApexChart>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" lg="12" md="12">
            <MudPaper Outlined="true" Height="400px">
                <ApexChart Title="Sales by countries"
                           TItem="SalesByCountryDto"
                           Height="@("100%")"
                           @ref="salesByCountriesChart"
                           Options="salesByCountriesOptions">
                    <ApexPointSeries TItem="SalesByCountryDto"
                                     Items="ViewModel!.SalesByCountries"
                                     XValue="x=>x.CountryName"
                                     YValue="x=>x.Sales"
                                     SeriesType="SeriesType.Bar" />
                </ApexChart>
            </MudPaper>
        </MudItem>
    </MudGrid>
</StupeniCard>

<style>
    .mud-chart-bar {
        stroke-width: 80px;
    }
</style>

@code {
    [CascadingParameter(Name = "IsDarkMode")]
    private bool IsDarkMode { get; set; }
    private bool isFirstRender = true;

    ApexChart<SalesByCountryDto> salesByCountriesChart;
    ApexChart<SalesByCategoryDto> salesByCategoryChart;
    ApexChart<OrdersByCountryDto> orderByCountriesChart;
    ApexChartOptions<OrdersByCountryDto> orderByCountriesOptions = new();
    ApexChartOptions<SalesByCategoryDto> salesByCategoryOptions = new();
    ApexChartOptions<SalesByCountryDto> salesByCountriesOptions = new();

    string OverallSalesValue;
    string OrdersQuantityValue;
    string AverageCheckValue;
    string MaxCheckValue;
    string MinCheckValue;

    protected override async Task OnParametersSetAsync()
    {
        orderByCountriesOptions.Theme.Mode = IsDarkMode ? Mode.Dark : Mode.Light;
        salesByCountriesOptions.Theme.Mode = IsDarkMode ? Mode.Dark : Mode.Light;
        salesByCategoryOptions.Theme.Mode = IsDarkMode ? Mode.Dark : Mode.Light;

        if (!isFirstRender)
        {
            await salesByCountriesChart.RenderAsync();
            await salesByCategoryChart.RenderAsync();
            await orderByCountriesChart.RenderAsync();
        }

        if (isFirstRender)
        {
            isFirstRender = false;
        }
    }
}
