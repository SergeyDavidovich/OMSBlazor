@using System.Reactive.Linq
@using OMSBlazor.Client.Pages.Order.Invoice
@inherits ReactiveComponentBase<JournalViewModel>
@inject IDialogService DialogService

<StupeniCard Title="Orders journal" Icon="@Icons.Material.Filled.List" IsWithButton="false">
    @* This grid contain "show invoice" button and thus it is hidden on small screens(smartphones) *@
    <div class="d-none d-sm-flex justify-center align-center">
        <MudDataGrid T="SelectableOrderDto" Style="width:100%" Items="@ViewModel.Orders" RowStyleFunc="RowStyleFunc" Hover="true" Striped="true" Bordered="true">
            <Columns>
                <PropertyColumn Property="x => x.SourceOrderDto.OrderId" Title="Id" />
                <TemplateColumn Title="Customer">
                    <CellTemplate>
                        <MudText>
                            @ViewModel.Customers.Single(x => x.CustomerId == context.Item.SourceOrderDto.CustomerId).CompanyName
                        </MudText>
                    </CellTemplate>
                </TemplateColumn>
                <TemplateColumn Title="Employee">
                    <CellTemplate>
                        <MudText>
                            @ViewModel.Employees.Single(x => x.EmployeeId == context.Item.SourceOrderDto.EmployeeId).FirstName @ViewModel.Employees.Single(x => x.EmployeeId == context.Item.SourceOrderDto.EmployeeId).LastName
                        </MudText>
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.SourceOrderDto.OrderDate" Format="dd/MM/yyyy" Title="Order date" />
                <TemplateColumn CellClass="d-flex justify-center">
                    <CellTemplate>
                        <MudButton Size="@MudBlazor.Size.Small" Variant="@Variant.Filled" Color="@MudBlazor.Color.Primary" OnClick="()=>ShowInvoice(context.Item.SourceOrderDto.OrderId)">Show invoice</MudButton>
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="SelectableOrderDto" />
            </PagerContent>
        </MudDataGrid>
    </div>

    @* This grid does not contain "show invoice" button and thus it is showen on small screens (smartphones)*@
    <div class="d-flex d-sm-none">
        <MudDataGrid T="SelectableOrderDto" Items="@ViewModel.Orders" RowStyleFunc="RowStyleFunc" Hover="true" Striped="true" Bordered="true">
            <Columns>
                <PropertyColumn Property="x => x.SourceOrderDto.OrderId" Title="Id" Class="" />
                <TemplateColumn Title="Customer">
                    <CellTemplate>
                        <MudText>
                            @ViewModel.Customers.Single(x => x.CustomerId == context.Item.SourceOrderDto.CustomerId).CompanyName
                        </MudText>
                    </CellTemplate>
                </TemplateColumn>
                <TemplateColumn Title="Employee">
                    <CellTemplate>
                        <MudText>
                            @ViewModel.Employees.Single(x => x.EmployeeId == context.Item.SourceOrderDto.EmployeeId).FirstName @ViewModel.Employees.Single(x => x.EmployeeId == context.Item.SourceOrderDto.EmployeeId).LastName
                        </MudText>
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.SourceOrderDto.OrderDate" Format="dd/MM/yyyy" Title="Order date" />
            </Columns>
            <PagerContent>
                <MudDataGridPager T="SelectableOrderDto" />
            </PagerContent>
        </MudDataGrid>
    </div>
</StupeniCard>

@code {
    public async Task ShowInvoice(int orderId)
    {
        var arr = await ViewModel.ChangeSelectedOrderCommand.Execute(orderId);
        var parameters = new DialogParameters<InvoiceDialog>()
        {
            { x=>x.InvoiceData, arr }
        };
        var options = new DialogOptions() { FullScreen = true };
        await DialogService.ShowAsync<InvoiceDialog>("Invoice", parameters, options);
    }

    private string RowStyleFunc(SelectableOrderDto selectableOrder, int index)
    {
        if (selectableOrder.IsSelcted)
        {
            return "background-color: #EDE7F6";
        }
        else
        {
            return string.Empty;
        }
    }
}